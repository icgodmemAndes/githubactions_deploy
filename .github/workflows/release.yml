name: Auto Release
on:
  push:
    branches:
      - develop
permissions:
  contents: write
  pull-requests: write
jobs:
  release-me:
    name: Create  Release Branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Genera nombre de rama Release
        id: generate-branch-name
        run: echo "release-branch-$(date +'%Y%m%d%H%M%S')" >> branch_name.txt
      - name: Lee Nombre de Rama desde archivo
        id: read-branch-name
        run: echo "::set-output name=branch_name::$(cat branch_name.txt)"
      - name: Revisar palabra clave y crear rama
        id: crear-rama
        if: ${{ contains(github.event.head_commit.message, 'RELEASE') }}
        run: |
          git checkout -b ${{ steps.read-branch-name.outputs.branch_name }}
          git push -f -u origin ${{ steps.read-branch-name.outputs.branch_name }}
      - name: Mezcla develop -> release
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          source-branch: develop
          target-branch: ${{ steps.read-branch-name.outputs.branch_name }}
      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Instalación de librerías y dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Correr pruebas
        id: correr-pruebas
        run: python -m unittest discover -s tests -v
      - name: Cálculo de cubrimiento
        id: cubrimiento
        run: |
          coverage run -m unittest discover -s tests -v
          coverage report -m
      - name: Mezcla release -> main
        if: success()
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          source-branch: ${{ steps.read-branch-name.outputs.branch_name }}
          target-branch: main
